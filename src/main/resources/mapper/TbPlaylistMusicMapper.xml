<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itkim.dao.TbPlaylistMusicMapper" >
  <resultMap id="BaseResultMap" type="com.itkim.pojo.TbPlaylistMusic" >
    <id column="playlistId" property="playlistid" jdbcType="BIGINT" />
    <id column="songId" property="songid" jdbcType="BIGINT" />
    <result column="songName" property="songname" jdbcType="VARCHAR" />
    <result column="songSinger" property="songsinger" jdbcType="VARCHAR" />
    <result column="songUrl" property="songurl" jdbcType="VARCHAR" />
    <result column="outerUrl" property="outerurl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    playlistId, songId, songName, songSinger, songUrl, outerUrl
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itkim.pojo.TbPlaylistMusicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_playlist_music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.itkim.pojo.TbPlaylistMusicKey" >
    select 
    <include refid="Base_Column_List" />
    from tb_playlist_music
    where playlistId = #{playlistid,jdbcType=BIGINT}
      and songId = #{songid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.itkim.pojo.TbPlaylistMusicKey" >
    delete from tb_playlist_music
    where playlistId = #{playlistid,jdbcType=BIGINT}
      and songId = #{songid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.itkim.pojo.TbPlaylistMusicExample" >
    delete from tb_playlist_music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itkim.pojo.TbPlaylistMusic" >
    insert IGNORE into tb_playlist_music (playlistId, songId, songName,
      songSinger, songUrl, outerUrl
      )
    values (#{playlistid,jdbcType=BIGINT}, #{songid,jdbcType=BIGINT}, #{songname,jdbcType=VARCHAR}, 
      #{songsinger,jdbcType=VARCHAR}, #{songurl,jdbcType=VARCHAR}, #{outerurl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.itkim.pojo.TbPlaylistMusic" >
    insert into tb_playlist_music
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="playlistid != null" >
        playlistId,
      </if>
      <if test="songid != null" >
        songId,
      </if>
      <if test="songname != null" >
        songName,
      </if>
      <if test="songsinger != null" >
        songSinger,
      </if>
      <if test="songurl != null" >
        songUrl,
      </if>
      <if test="outerurl != null" >
        outerUrl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="playlistid != null" >
        #{playlistid,jdbcType=BIGINT},
      </if>
      <if test="songid != null" >
        #{songid,jdbcType=BIGINT},
      </if>
      <if test="songname != null" >
        #{songname,jdbcType=VARCHAR},
      </if>
      <if test="songsinger != null" >
        #{songsinger,jdbcType=VARCHAR},
      </if>
      <if test="songurl != null" >
        #{songurl,jdbcType=VARCHAR},
      </if>
      <if test="outerurl != null" >
        #{outerurl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itkim.pojo.TbPlaylistMusicExample" resultType="java.lang.Integer" >
    select count(*) from tb_playlist_music
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_playlist_music
    <set >
      <if test="record.playlistid != null" >
        playlistId = #{record.playlistid,jdbcType=BIGINT},
      </if>
      <if test="record.songid != null" >
        songId = #{record.songid,jdbcType=BIGINT},
      </if>
      <if test="record.songname != null" >
        songName = #{record.songname,jdbcType=VARCHAR},
      </if>
      <if test="record.songsinger != null" >
        songSinger = #{record.songsinger,jdbcType=VARCHAR},
      </if>
      <if test="record.songurl != null" >
        songUrl = #{record.songurl,jdbcType=VARCHAR},
      </if>
      <if test="record.outerurl != null" >
        outerUrl = #{record.outerurl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_playlist_music
    set playlistId = #{record.playlistid,jdbcType=BIGINT},
      songId = #{record.songid,jdbcType=BIGINT},
      songName = #{record.songname,jdbcType=VARCHAR},
      songSinger = #{record.songsinger,jdbcType=VARCHAR},
      songUrl = #{record.songurl,jdbcType=VARCHAR},
      outerUrl = #{record.outerurl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itkim.pojo.TbPlaylistMusic" >
    update tb_playlist_music
    <set >
      <if test="songname != null" >
        songName = #{songname,jdbcType=VARCHAR},
      </if>
      <if test="songsinger != null" >
        songSinger = #{songsinger,jdbcType=VARCHAR},
      </if>
      <if test="songurl != null" >
        songUrl = #{songurl,jdbcType=VARCHAR},
      </if>
      <if test="outerurl != null" >
        outerUrl = #{outerurl,jdbcType=VARCHAR},
      </if>
    </set>
    where playlistId = #{playlistid,jdbcType=BIGINT}
      and songId = #{songid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itkim.pojo.TbPlaylistMusic" >
    update tb_playlist_music
    set songName = #{songname,jdbcType=VARCHAR},
      songSinger = #{songsinger,jdbcType=VARCHAR},
      songUrl = #{songurl,jdbcType=VARCHAR},
      outerUrl = #{outerurl,jdbcType=VARCHAR}
    where playlistId = #{playlistid,jdbcType=BIGINT}
      and songId = #{songid,jdbcType=BIGINT}
  </update>
</mapper>